                        ---------------------
                        LensKit Release Notes
                        ---------------------

#macro ( issue $id )##
{{{http://dev.grouplens.org/trac/lenskit/ticket/$id}#$id}}##
#end

Release ${project.version}

  This release contains many large changes, including significant
  architectural and API changes to make it easier to take LensKit
  forward.  See the {{{http://dev.grouplens.org/hg/lenskit}Mercurial
  changelog}} for complete change listings.  Highlights include:

  * Dropped our use of Guice for dependency injection and
    configuration.  Recommenders are now configured directly with the
    <<<RecommenderComponentBuilder>>> interface and subclasses.

  * Renamed and refactored classes in the recommender implementations
    to improve clarity and consistency.
    
  * Upgraded to Maven 3 (#issue(38)); Maven 2 should still work for
    building everything except the web site.

  * Lots of documentation improvements.

  * Introduce <<<ImmutableSparseVector>>> and build more robust
    type-checking for mutability guarantees on sparse vectors.

  * Drop thread safety guarantee on <<<UserRatingProfile>>>. Many
    profile implementations will likely be thread-safe, but we're not
    promising it any more.
    
  []

Release 0.0.2 (March 28, 2011)

  This release contains a number of API changes to make the API
  cleaner and easier to move forward.

  * Renamed <<<BuildContext>>> to <<<RatingBuildContext>>> to allow
    for a future <<<BasketBuildContext>>>.

  * Added support for excluded items to recommendation API.

  * Added <<<AbstractRatingRecommender>>> helper class to make
    implementing rating recommenders easier.

  * Removed the <<<RecommenderService>>> class and several related
    classes to clean up the API.  Client code should directly request
    <<<RatingRecommender>>> or <<<RatingPredictor>>> instances, and
    modules should scope them and their dependencies appropriately to
    avoid duplicating recommender models.

  []

* API Compatibility Notes

    * Code dependent on <<<BuildContext>>> or <<<PackedBuildContext>>>
      must be updated to use <<<RatingBuildContext>>> and
      <<<PackedRatingBuildContext>>> instead.

    * Code implementing <<<RatingRecommender>>> must be updated to
      implement the new API.  We recommend using
      <<<AbstractRatingRecommender>>> to help with this.

    * All code must be updated to directly receive injected
      <<<RatingRecommender>>> and/or <<<RatingPredictor>>> instances
      (or providers thereof).

    []

Release 0.0.1 (March 25, 2011)

  * Initial release

  []
